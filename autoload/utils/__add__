#!/bin/zsh

__import "core/core"
__import "print/print"

local    name
local    tag key val
local -a tags
local -i max=0
local    is_oh_my_zsh=false is_local=false
local -a re_tags

tags=( ${(s/, /)@:gs/,  */, } )
name="${tags[1]}"
tags[1]=()

# DEPRECATED: pipe
if [[ -p /dev/stdin ]]; then
    __die "[zplug] $fg[red]${(%):-"%U"}WARNING${(%):-"%u"}$reset_color: pipe syntax is deprecated!\n"
    __die "[zplug] Please use '$fg[blue]on$reset_color' tag instead.\n"
    return 1
fi

if __is_cli; then
    if __zpluged "$name"; then
        __die "[zplug] $name: already managed\n"
        return 1
    else
        # Add to the external file
        __external__ "zplug ${(qqq)name}${tags[@]:+", ${(j:, :)${(q)tags[@]}}"}"
        return $status
    fi
fi

# Process the duplication of key
if __zpluged; then
    for key in "${(k)zplugs[@]}"
    do
        if [[ $key =~ "^$name@*$" ]] && (( $max < $#key )); then
            max=$#key
            name="${key}@"
        fi
    done
fi

# Reconstruct the tag information
for tag in "${tags[@]}"
do
    key=${${(s.:.)tag}[1]}
    val=${${(s.:.)tag}[2]}

    if [[ $key =~ ^$_ZPLUG_TAG_PATTERN$ ]] || [[ $key =~ ^$_ZPLUG_OLDTAG_PATTERN$ ]]; then
        case "$key" in
            "of")
                key="use"
                __die "[zplug] $fg[red]${(%):-"%U"}WARNING${(%):-"%u"}$reset_color: '$fg[blue]of$reset_color' tag is deprecated. "
                __die "Please use '$fg[blue]use$reset_color' tag instead ($fg[green]${name:gs:@::}$reset_color).\n"
                ;;
            "file")
                key="rename_to"
                __die "[zplug] $fg[red]${(%):-"%U"}WARNING${(%):-"%u"}$reset_color: '$fg[blue]file$reset_color' tag is deprecated. "
                __die "Please use '$fg[blue]rename_to$reset_color' tag instead ($fg[green]${name:gs:@::}$reset_color).\n"
                ;;
            "commit")
                key="at"
                __die "[zplug] $fg[red]${(%):-"%U"}WARNING${(%):-"%u"}$reset_color: '$fg[blue]commit$reset_color' tag is deprecated. "
                __die "Please use '$fg[blue]at$reset_color' tag instead ($fg[green]${name:gs:@::}$reset_color).\n"
                ;;
            "from")
                case $val in
                    "oh-my-zsh")
                        is_oh_my_zsh=true
                        ;;
                    "local")
                        is_local=true
                        ;;
                esac
                ;;
        esac

        # Reconstruct
        re_tags+=("$key:$val")
    else
        __die "[zplug] $tag: $key is invalid tag name\n"
        return 1
    fi
done

# Set the directory information
if $is_oh_my_zsh; then
    re_tags+=("dir:$ZPLUG_HOME/repos/$_ZPLUG_OHMYZSH/${name:gs:@::}")
elif $is_local; then
    if [[ $name[1] =~ [~$/] ]]; then
        re_tags+=(dir:${~name:gs:@::})
    else
        re_tags+=("dir:$ZPLUG_HOME/${name:gs:@::}")
    fi
else
    re_tags+=("dir:$ZPLUG_HOME/repos/${name:gs:@::}")
fi

# Add to zplugs
zplugs+=("$name" "${(j:, :)re_tags[@]:-}")
